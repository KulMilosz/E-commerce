
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           String @id @default(cuid())
  firstName    String
  email        String @unique
  passwordHash String


  orders Order[]

  @@map("users")
}


model Category {
  id          String @id @default(cuid())
  name        String
  description String
  image       String
  exploreInfo String


  products Product[]

  @@map("categories")
}


model Product {
  id          String  @id @default(cuid())
  name        String
  description String
  price       Decimal @db.Decimal(10, 2)
  stock       Int
  imageUrl    String
  categoryId  String


  category   Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@map("products")
}


model Order {
  id          String      @id @default(cuid())
  userId      String
  createdAt   DateTime    @default(now())
  status      OrderStatus @default(PENDING)
  totalAmount Decimal     @db.Decimal(10, 2)


  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@map("orders")
}


model OrderItem {
  id             String  @id @default(cuid())
  orderId        String
  productId      String
  quantity       Int
  priceAtPurchase Decimal @db.Decimal(10, 2)


  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("order_items")
}


enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
